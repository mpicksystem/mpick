#!/usr/bin/python3
###############################################################
# Mpick System.
# Programmer: Martin Sanders
# E-Mail    : mpick.system@gmail.com
#
# To install Python3 on CentOS: sudo yum install python3
# To install Python3 on Ubunto: sudo apt-get install python3

###############################################################
# Libraries to import.
import getpass
import fileinput
import sys

###############################################################
# Filesystem functions.
def update_file(file,searchExp,replaceExp):
        for line in fileinput.input(file, inplace=1):
                if searchExp in line:
                        line = line.replace(searchExp,replaceExp)
                sys.stdout.write(line)

###############################################################
# Pick environment commands.
def listu():
	listu_file = "DATABASE/ACC"
	read_listu_file = open(listu_file, "r")
	for listu_lines in read_listu_file:
		print(listu_lines[:-1])


def listfiles():
	listfiles_file = "DATABASE/MD"
	read_listfiles_file = open(listfiles_file, "r")
	for listfiles_lines in read_listfiles_file:
		print(listfiles_lines[:-1])

def tcl_help():
	print('\nCOMMANDS AVAILABLE\n')
	print('OFF		- Logoff MPick')
	print('LISTU		- List Users')
	print('LIST-FILES	- List filesS\n')

###############################################################
# Main TCL routine which prompts for commands.
def tcl ():
	tcl_command = ''
	while tcl_command != "OFF":
		tcl_command = input('>');
		if tcl_command == 'LISTU':
			listu()	
		if tcl_command == 'LIST-FILES':
			listfiles()
		if tcl_command == 'HELP':
			tcl_help()

	# Message, and exit.
	update_file("DATABASE/ACC","0001:martin","0001:")
	print('\nExiting MPick\n')
	quit()

###############################################################
# Built in commands.
def built_in_commands():
	print("\nCOMMANDS AVAILABLE:")
	print("OFF")
	print("WHO")
	print("LISTU")
	print("LIST-FILES\n")
	return

###############################################################
# Function to authentica login.
def authenticate(username,password):
	login_file = "DATABASE/LOGINS"
	read_login_file = open(login_file, "r")
	for login_lines in read_login_file:
		login_line = login_lines.split(':')
		username_stored = login_line[1]
		password_stored = login_line[2]
		password_stored = password_stored.rsplit()
		username_stored = username_stored.rsplit()
		if username_stored == username:
			if password_stored == password:
				update_file("DATABASE/ACC","0001:","0001:martin")
				tcl()
				return

###############################################################
# Start of program.
system_file = "DATABASE/SYSTEM"
read_system_file = open(system_file, "r")
for release_system_file_lines in read_system_file:
	release_line = release_system_file_lines.split(':')
	release_type = release_line[0]
	release_number = release_line[1]
	release_number = release_number[:-1]
	if release_type == 'Release':
		release_version = str(release_number)

print('\nRelease ' + release_version)
username = input('Username: ')
password = getpass.getpass('Password: ')
username = username.rsplit()
password = password.rsplit()

# Here we jump to the authenticate function.
authenticate(username,password)
